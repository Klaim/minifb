intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
#import xxxx_libs += libhello%lib{hello}

# Public headers.
#
pub = [dir_path] ../include/

include $pub

pub_hdrs = $($pub/ pub_hdrs)

lib{minifb}: $pub/{$pub_hdrs}

# Private headers and sources as well as dependencies.
#

lib{minifb}: {h c}{MiniFB_internal} {c}{MiniFB_common MiniFB_timer} {h}{WindowData}  $impl_libs $intf_libs # {cxx}{MiniFB_cpp}
lib{minifb}: c{MiniFB_linux}: include = ($cc.target.class == 'linux')
lib{minifb}: gl/{h c}{MiniFB_GL} #: include = ($config.libminifb.use_opengl_api)
lib{minifb}: x11/{c}{X11MiniFB} x11/{h}{WindowData_X11}

#lib{minifb}: c{windows/WinMiniFB} {h}{windows/WindowData_Win}: include = ($cc.target.class == 'windows')

# TODO: split up macos, linux, windows
if $config.libminifb.use_opengl_api
{
  lib{minifb}:
  {
    cc.poptions =+ -DUSE_OPENGL_API
    cc.loptions =+ -lX11 -lGL
  }
}

#switch cc.target.class
#{
#  case 'linux'
#    
#    
#}

# Build options.
#
out_pfx_inc = [dir_path] $out_root/include/
src_pfx_inc = [dir_path] $src_root/include/
out_pfx_src = [dir_path] $out_root/src/
src_pfx_src = [dir_path] $src_root/src/

c.poptions =+ "-I$out_pfx_src" "-I$src_pfx_src" \
              "-I$out_pfx_inc" "-I$src_pfx_inc"

{hbmia obja}{*}: c.poptions += -DLIBMINIFB_STATIC_BUILD
{hbmis objs}{*}: c.poptions += -DLIBMINIFB_SHARED_BUILD

# Export options.
#
lib{minifb}:
{
  c.export.poptions = "-I$out_pfx_inc" "-I$src_pfx_inc"
  c.export.libs = $intf_libs
}

liba{minifb}: c.export.poptions += -DLIBMINIFB_STATIC
libs{minifb}: c.export.poptions += -DLIBMINIFB_SHARED

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{minifb}: bin.lib.version = "-$version.project_id"
else
  lib{minifb}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
#
h{*}: install = false
